
function [W, F_B, s_max, F_D, V_i, W_load, F_L] = calc_Everything(d, t, L)
% ENME 610 - Engineering Optimization
% University of Maryland, College Park
% Group 1: David Smart, Luke Travisiano, Jason Morin
% AUV Optimization
%
%% Description:
%   Calculates the objective functions and the final values related to the
%   constraints other than the variable bounds. This is used for the 
%   visualization of the feasible region.
%
%% Inputs:                
%   d        inner diameter of the hull (m)
%   t        thickness of the hull (m)
%   L        length of the cylindrical section of the hull (m)
%
%% Outputs:
%   W         weight of the empty AUV (N)
%   F_B       buoyant force on the AUV (N)
%   s_max     stress at max depth (N/m^2)
%   F_D       force of drag on the AUV (N)
%   V_i       internal volume of the cylindrical middle section of the AUV (m^3)
%   W_load    weight of payload (N)
%   F_L       force of lift generated by fins (N)
%

%% get all parameters
[g, rho, mu, rho_load, rho_fins, rho_hull, ~, v, depth, ~, theta, alpha, tfins, l, w] = set_Params();

%% calculations

% outer diameter
D = d + 2*t;

% total length
L_T = calc_L_T(theta, D, L);

% volume displaced by hull
V = calc_V(theta, D, L);

% volume displaced by fins
V_fins = calc_V_fins(l, w);

% surface area of hull
S = calc_S(theta, D, L);

% cross-section area of fins
A = 2*w*l;

% mass-volume of hull
V_hull = calc_V_hull(theta, D, d, L);

% mass-volume of fins
V_fins2 = calc_V_fins2(tfins, l, w);

% weight
W_hull = g*rho_hull*V_hull;
W_fins = g*rho_fins*V_fins2;
W = W_hull+ W_fins;

% bouyancy
F_B = rho*g*(V + V_fins);

% reynold's number
Rn = calc_Rn(rho, mu, v, L_T);

% Drag Coefficient for hull (n/a - unitless)
[C_v] = calc_HydroCoeff(D, L_T, V, Rn);

% Drag and Lift Coefficients for fins (n/a - unitless)
C_D_fins = 0.00012*alpha^2 + 0.0004*alpha + 0.0006;
C_L_fins = 0.1089*alpha + 0.0194;

% force of lift from fins
F_L = C_L_fins*(rho/2)*A*v^2;

% stress
P = rho*g*depth; % hydrostatic pressure
[s_t, s_h, s_a, s_HH, s_AA] = calc_PV_Stresses(theta, d, D, P);
s_max = calc_s_max(s_t, s_h, s_a, s_HH, s_AA);

% Force of Drag on the AUV (N)
F_D_hull = C_v*(rho/2)*S*v^2;
F_D_fins = C_D_fins*(rho/2)*A*v^2;
F_D = F_D_hull + F_D_fins;

% Internal Volume of Cylindrical Section of the hull (m^3)
V_i = calc_V(theta, d, L);

% resulting payload weight
W_load = g*rho_load*V_i;

% % calculate max possible velocity
% v_max = calc_vmax(g, rho, mu, D, L_T, V, S, A, T, C_D_fins, W+W_load);

end
